{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","visibleItems","Math","ceil","pagesAmount","className","cn","disabled","href","onClick","map","item","active","App","useState","itemsOnPage","setItemsOnPage","initialPage","setInitialPage","maxItems","startVisibleItems","endVisibleItems","slice","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAeX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAE/CM,EAAcF,KAAKC,KAAKN,EAAQC,GAUtC,OACE,mCACE,qBAAIO,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBR,IADZ,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QApBa,WACrBT,EAAaD,EAAc,IAcrB,oBAUDE,EAAaS,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OACRN,UAAWC,IAAG,YAAa,CACzBM,OAAQb,IAAgBY,IAH5B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPT,EAAaW,IALjB,SAQGA,KAVEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUR,IAAgBK,IAD5B,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBK,EAC/BK,QAlDa,WACrBT,EAAcD,EAAc,IA4CtB,0BC7DGc,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAJtB,GAIhB,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAWF,EAAcF,EACzBK,EAAoBD,EAAWJ,EAC/BM,EAAkBF,EATP,MAWbA,EAQElB,EAAeX,EAlBL,EADC,IAmBsCoB,KAAI,SAAAC,GAAI,OAC7D,oBACE,UAAQ,OADV,wBAIWA,IAFJA,MAINW,MAAMF,EAAmBC,GAE5B,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWY,EADX,mBACiCG,EAAoB,EADrD,cAC4DC,EAD5D,eAhCa,GAgCb,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOT,EACPU,SA9BY,SACpBC,GAEAV,GAAgBU,EAAMC,OAAOH,QAsBvB,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MA1DW,GA2DXC,QAASiB,EACThB,YAAakB,EACbjB,aAAckB,IAEhB,6BACGjB,QClET4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a3bd7192.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const visibleItems = getNumbers(1, Math.ceil(total / perPage));\n\n  const pagesAmount = Math.ceil(total / perPage);\n\n  const selectPrevPage = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const selectNextPage = () => {\n    onPageChange((currentPage + 1));\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={selectPrevPage}\n          >\n            «\n          </a>\n        </li>\n        {visibleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            className={cn('page-item', {\n              active: currentPage === item,\n            })}\n            key={item}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => {\n                onPageChange(item);\n              }}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item', {\n          disabled: currentPage === pagesAmount,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesAmount}\n            onClick={selectNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </ >\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst totalItems = 42;\nconst firstPage = 1;\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [initialPage, setInitialPage] = useState(firstPage);\n\n  const maxItems = initialPage * itemsOnPage;\n  const startVisibleItems = maxItems - itemsOnPage;\n  const endVisibleItems = maxItems > totalItems\n    ? totalItems\n    : maxItems;\n\n  const selectedItems = (\n    event: ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setItemsOnPage(+event.target.value);\n  };\n\n  const visibleItems = getNumbers(firstPage, totalItems).map(item => (\n    <li\n      data-cy=\"item\"\n      key={item}\n    >\n      {`Item ${item}`}\n    </li>\n  )).slice(startVisibleItems, endVisibleItems);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${initialPage} (items ${startVisibleItems + 1} - ${endVisibleItems} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={selectedItems}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsOnPage}\n        currentPage={initialPage}\n        onPageChange={setInitialPage}\n      />\n      <ul>\n        {visibleItems}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}